<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qzlyhua.assistant.mapper.ApiCsrParamMapper">
    <resultMap id="BaseResultMap" type="cn.qzlyhua.assistant.entity.ApiCsrParam">
        <!--@mbg.generated-->
        <!--@Table AS_API_CSR_PARAM-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="csr_id" jdbcType="INTEGER" property="csrId"/>
        <result column="parameter_type" jdbcType="VARCHAR" property="parameterType"/>
        <result column="key" jdbcType="VARCHAR" property="key"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="describe" jdbcType="VARCHAR" property="describe"/>
        <result column="required" jdbcType="VARCHAR" property="required"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, csr_id, parameter_type, `key`, `type`, `describe`, required
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from AS_API_CSR_PARAM
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from AS_API_CSR_PARAM
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.qzlyhua.assistant.entity.ApiCsrParam"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into AS_API_CSR_PARAM (csr_id, parameter_type, `key`,
        `type`, `describe`, required
        )
        values (#{csrId,jdbcType=INTEGER}, #{parameterType,jdbcType=VARCHAR}, #{key,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, #{required,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.qzlyhua.assistant.entity.ApiCsrParam"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into AS_API_CSR_PARAM
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="csrId != null">
                csr_id,
            </if>
            <if test="parameterType != null">
                parameter_type,
            </if>
            <if test="key != null">
                `key`,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="describe != null">
                `describe`,
            </if>
            <if test="required != null">
                required,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="csrId != null">
                #{csrId,jdbcType=INTEGER},
            </if>
            <if test="parameterType != null">
                #{parameterType,jdbcType=VARCHAR},
            </if>
            <if test="key != null">
                #{key,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                #{describe,jdbcType=VARCHAR},
            </if>
            <if test="required != null">
                #{required,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.qzlyhua.assistant.entity.ApiCsrParam">
        <!--@mbg.generated-->
        update AS_API_CSR_PARAM
        <set>
            <if test="csrId != null">
                csr_id = #{csrId,jdbcType=INTEGER},
            </if>
            <if test="parameterType != null">
                parameter_type = #{parameterType,jdbcType=VARCHAR},
            </if>
            <if test="key != null">
                `key` = #{key,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                `describe` = #{describe,jdbcType=VARCHAR},
            </if>
            <if test="required != null">
                required = #{required,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.qzlyhua.assistant.entity.ApiCsrParam">
        <!--@mbg.generated-->
        update AS_API_CSR_PARAM
        set csr_id = #{csrId,jdbcType=INTEGER},
        parameter_type = #{parameterType,jdbcType=VARCHAR},
        `key` = #{key,jdbcType=VARCHAR},
        `type` = #{type,jdbcType=VARCHAR},
        `describe` = #{describe,jdbcType=VARCHAR},
        required = #{required,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into AS_API_CSR_PARAM
        (csr_id, parameter_type, `key`, `type`, `describe`, required)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.csrId,jdbcType=INTEGER}, #{item.parameterType,jdbcType=VARCHAR}, #{item.key,jdbcType=VARCHAR},
            #{item.type,jdbcType=VARCHAR}, #{item.describe,jdbcType=VARCHAR}, #{item.required,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--auto generated by MybatisCodeHelper on 2021-10-28-->
    <delete id="deleteByCsrId">
        delete from AS_API_CSR_PARAM
        where csr_id=#{csrId,jdbcType=INTEGER}
    </delete>

    <!--auto generated by MybatisCodeHelper on 2021-10-29-->
    <select id="selectByCsrIdAndParameterType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from AS_API_CSR_PARAM
        where csr_id=#{csrId,jdbcType=INTEGER} and parameter_type=#{parameterType,jdbcType=VARCHAR}
        order by id
    </select>

    <resultMap id="groupByVersion" type="cn.qzlyhua.assistant.dto.csr.GroupByVersion">
        <result column="version" jdbcType="VARCHAR" property="version"/>
        <result column="total" jdbcType="INTEGER" property="total"/>
        <result column="lastUpdateTime" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
    </resultMap>
    <select id="statisticsByVersion" resultMap="groupByVersion">
        select version, count(1) as total, max(update_time) as lastUpdateTime
        from AS_API_CSR
        GROUP BY version
        order by version desc
    </select>

    <select id="getParamKeysRecommendation" resultType="cn.qzlyhua.assistant.dto.csr.Recommendation">
        SELECT `key` AS label, `describe`, type, required FROM AS_API_CSR_PARAM
        where `key` like concat('%',#{query,jdbcType=VARCHAR},'%')
        GROUP BY `key`,`describe`, type, required ORDER BY `key`, count(1) DESC LIMIT #{limit,jdbcType=INTEGER}
    </select>

    <!--auto generated by MybatisCodeHelper on 2021-11-17-->
    <select id="selectByCsrIdIn" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from AS_API_CSR_PARAM
        where csr_id in
        <foreach item="item" index="index" collection="csrIdCollection"
                 open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        order by id
    </select>

    <!--auto generated by MybatisCodeHelper on 2021-11-18-->
    <delete id="deleteByCsrIdIn">
        delete from AS_API_CSR_PARAM
        where csr_id in
        <foreach item="item" index="index" collection="csrIdCollection"
                 open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </delete>

    <!--auto generated by MybatisCodeHelper on 2021-11-26-->
    <select id="selectByVersion" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM AS_API_CSR_PARAM WHERE csr_id IN (
        SELECT id FROM AS_API_CSR WHERE version=#{version,jdbcType=VARCHAR}
        )
        order by id
    </select>
</mapper>